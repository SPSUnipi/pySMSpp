name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
  - cron: "0 5 * * TUE"

# Cancel any in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    # Test package build in matrix of OS and Python versions
    name: Test package
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          # - "3.13"
        - "3.12"
        - "3.11"
        - "3.10"
          # - "3.9"
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]

    - name: Test package
      run: |
        pytest

  test_with_smspp:
    # Test package build in matrix of OS and Python versions
    name: Test package with SMSpp
    needs:
    - test
    runs-on: ${{ matrix.os }}
    concurrency:
      group: "limit-run-time-${{ matrix.os }}"
      cancel-in-progress: false
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.12"
        os:
        - ubuntu-latest
        # See errors in https://github.com/SPSUnipi/pySMSpp/actions/runs/14183022094
        # - macos-latest  # Commented until the following error is fixed "Error: Running Homebrew as root is extremely dangerous and no longer supported."
        # - windows-latest # Commented until the following error is fixed "You cannot call a method on a null-valued expression."
    env:
      MPLBACKEND: Agg  # https://github.com/orgs/community/discussions/26434
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for setuptools_scm
    - name: Retrieve last-run-time
      id: retrieve
      uses: actions/cache@v3
      with:
        path: .last-run-time
        key: last-run-time
        restore-keys: last-run-time

    - name: Check if 1 hour has passed
      id: check_time
      run: |
        CURRENT_TIME=$(date +%s)

        # If the file doesn't exist yet, default to zero so it always runs the first time.
        if [ -f .last-run-time ]; then
          LAST_RUN_TIME=$(cat .last-run-time)
        else
          LAST_RUN_TIME=0
        fi

        DIFF=$((CURRENT_TIME - LAST_RUN_TIME))
        # 3600 seconds = 1 hour
        if [ $DIFF -lt 3600 ]; then
          SLEEP_TIME=$((3600 - DIFF))
          echo "Last run was only $DIFF seconds ago (< 1 hour). Waiting $SLEEP_TIME seconds."
          sleep $SLEEP_TIME
        else
          echo "It has been more than 1 hour. Proceeding."
        fi

    - name: Update last-run-time
      run: date +%s > .last-run-time

    - name: Save last-run-time
      uses: actions/cache@v3
      with:
        path: .last-run-time
        key: last-run-time

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package and dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .[dev]

    - name: Install SMSpp (linux and mac)
      if: runner.os != 'windows'
      run: |
        cd $HOME
        git clone https://gitlab.com/smspp/smspp-project.git
        cd smspp-project
        chmod +x ./INSTALL.sh
        sudo ./INSTALL.sh --without-scip --without-gurobi
        echo $HOME/smspp-project >> $GITHUB_PATH
        echo $HOME/smspp-project/build/InvestmentBlock/test >> $GITHUB_PATH
        echo "PATH is now: $PATH"

    - name: Install SMSpp (windows)
      if: runner.os == 'windows'
      shell: pwsh
      run: |
        cd C:\
        git clone https://gitlab.com/smspp/smspp-project.git
        cd smspp-project
        .\INSTALL.ps1 --without-scip --without-gurobi
        echo C:\smspp-project\Release >> $GITHUB_PATH
        echo C:\smspp-project\build\InvestmentBlock\test\Release >> $GITHUB_PATH

    - name: Test package with SMSpp
      run: |
        pytest --force-smspp
